{% liquid
  assign section_id = section.settings.custom_id | default: section.id
  assign products_per_page = section.settings.products_per_page | default: 24

  # Get collection from URL or section settings
  # Extract collection handle from URL path, accounting for filter parameters
  assign url_parts = request.path | split: '/'
  assign collection_handle = url_parts[2] | default: ''

  if section.settings.collection != blank
    assign selected_collection = collections[section.settings.collection]
  elsif collection_handle != blank and collection_handle != 'shop-all'
    assign selected_collection = collections[collection_handle]
  else
    assign selected_collection = collections.all
  endif

  # Define filter options for Kozmetika collection
  assign show_filters = false
  if selected_collection.handle == 'kozmetika' or selected_collection.handle == 'cosmetics'
    assign show_filters = true
  endif
%}

<div class="container mx-auto max-w-7xl px-4 py-8 md:py-16">
  {% comment %} Collection chips navigation {% endcomment %}
  <div class="flex flex-wrap gap-2 mb-8 justify-center">
    <a
      href="{{ routes.collections_url }}/all"
      class="collection-chip {% if selected_collection.handle == 'all' %}active{% endif %}"
    >
      {{ 'collections.all' | t | default: 'Shop all' }}
    </a>
    <a
      href="{{ routes.collections_url }}/dodaci-prehrani"
      class="collection-chip {% if selected_collection.handle == 'dodaci-prehrani' %}active{% endif %}"
    >
      {{ 'collections.supplements' | t | default: 'Dodaci prehrani' }}
    </a>
    <a
      href="{{ routes.collections_url }}/kozmetika"
      class="collection-chip {% if selected_collection.handle == 'kozmetika' %}active{% endif %}"
    >
      {{ 'collections.cosmetics' | t | default: 'Kozmetika' }}
    </a>
  </div>

  {% if section.settings.title != blank %}
    <div class="text-center mb-8">
      <h1 class="text-3xl uppercase mb-2">{{ selected_collection.title }}</h1>
      {% comment %} Debug info - remove in production {% endcomment %}
      <p class="text-sm opacity-50">
        Collection: {{ selected_collection.handle }} | Filters: {{ selected_collection.filters.size }}
      </p>
    </div>
  {% endif %}

  {% comment %} Main content area with filters and products {% endcomment %}
  <div class="flex flex-col md:flex-row gap-8">
    {% comment %} Filters sidebar {% endcomment %}
    {% if show_filters and section.settings.show_filters %}
      <aside class="w-full md:w-64 flex-shrink-0">
        {% render 'facets' %}
      </aside>
    {% endif %}

    {% comment %} Products grid {% endcomment %}
    <div class="flex-1">
      <div class="mb-4 text-sm opacity-75 product-count">
        {{ selected_collection.products_count }}
        {{ 'general.products' | t | default: 'Products' }}
      </div>

      {% paginate selected_collection.products by products_per_page %}
        {% if selected_collection.products.size == 0 %}
          <div class="text-center py-12">
            <p class="text-lg opacity-75">
              {{ 'filters.no_products' | t | default: 'No products found with the selected filters.' }}
            </p>
            <a href="{{ selected_collection.url }}" class="inline-block mt-4 px-6 py-2 bg-black text-white rounded">
              {{ 'filters.clear_all' | t | default: 'Clear all filters' }}
            </a>
          </div>
        {% else %}
          <div
            class="grid grid-cols-[repeat(auto-fill,minmax(200px,1fr))] sm:grid-cols-[repeat(auto-fill,minmax(240px,1fr))] md:grid-cols-[repeat(auto-fill,minmax(280px,1fr))] gap-4 sm:gap-6 md:gap-8 mb-12"
            data-section-id="{{ section_id }}"
          >
            {% for product in selected_collection.products %}
              <div class="product-card">
                {% render 'product-card', product: product %}
              </div>
            {% endfor %}
          </div>

          {% if paginate.pages > 1 %}
            <div class="text-center">
              {{ paginate | default_pagination }}
            </div>
          {% endif %}
        {% endif %}
      {% endpaginate %}
    </div>
  </div>
</div>

{% stylesheet %}
  /* Collection chips */
  .collection-chip {
    padding: 0.5rem 1.5rem;
    border: 1px solid #e5e7eb;
    border-radius: 9999px;
    text-decoration: none;
    color: #374151;
    font-size: 0.875rem;
    transition: all 0.2s;
    background: white;
  }

  .collection-chip:hover {
    border-color: #9ca3af;
    background: #f9fafb;
  }

  .collection-chip.active {
    background: #000;
    color: #fff;
    border-color: #000;
  }

  /* Filter checkboxes */
  .filter-checkbox-label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    padding: 0.25rem 0;
  }

  .filter-checkbox-label:hover {
    opacity: 0.8;
  }

  .filter-checkbox {
    width: 1rem;
    height: 1rem;
    cursor: pointer;
    flex-shrink: 0;
  }

  @media (max-width: 768px) {
    aside {
      order: 2;
    }

    .flex-1 {
      order: 1;
    }
  }
{% endstylesheet %}

<script src="{{ 'facets.js' | asset_url }}" defer></script>

{% schema %}
{
  "name": "Shop All",
  "class": "shop-all__section",
  "tag": "section",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Page Title",
      "default": "Shop All Products"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
      "info": "Select a collection to display. Leave empty to show all products."
    },
    {
      "type": "range",
      "id": "products_per_page",
      "label": "Products per page",
      "min": 12,
      "max": 48,
      "step": 6,
      "default": 24
    },
    {
      "type": "checkbox",
      "id": "show_filters",
      "label": "Show filters",
      "default": false
    }
  ],
  "presets": [
    {
      "name": "Shop All",
      "category": "Collection"
    }
  ]
}
{% endschema %}
