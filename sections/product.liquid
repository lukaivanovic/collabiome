{% comment %}
  This section is used in the product template to render product page with
  media, content, and add-to-cart form.

  https://shopify.dev/docs/storefronts/themes/architecture/templates/product
{% endcomment %}

{%- liquid
  assign benefits = product.metafields.custom.benefits.value
  assign accordion_items = product.metafields.custom.accordion.value
-%}

<div class="container mx-auto px-4">
  <script id="product-data" type="application/json">
    {{ product | json }}
  </script>
  <script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
  <div class="product-container grid gap-10 pt-10 lg:[grid-template-columns:1fr_512px]">
    <div class="overflow-hidden relative rounded-2xl aspect-[1/1]">
      <div class="embla flex overflow-hidden relative h-full" data-product-id="{{ product.id }}">
        <div class="flex">
          {% for image in product.images %}
            <div class="embla__slide h-full">
              {% render 'image', image: image %}
            </div>
          {% endfor %}
        </div>

        <button
          class="embla__prev absolute top-1/2 -translate-y-1/2 left-2 bg-white rounded-full z-2 p-1 text-black"
          aria-label="Previous image"
        >
          {{ 'icon-chevron-left.svg' | inline_asset_content }}
        </button>

        <button
          class="embla__next absolute top-1/2 -translate-y-1/2 right-2 bg-black rounded-full z-2 p-1 text-white"
          aria-label="Next image"
        >
          {{ 'icon-chevron-right.svg' | inline_asset_content }}
        </button>
      </div>
    </div>

    <div class="product-content flex flex-col gap-5">
      <h1>{{ product.title }}</h1>
      <div class="product-price-wrapper flex items-center gap-3">
        {% if product.compare_at_price > product.price %}
          <span class="product-price-compare text-lg text-gray-500 line-through">
            {{- product.compare_at_price | money -}}
          </span>
        {% endif %}
        <span class="product-price text-2xl font-semibold text-black" data-base-price="{{ product.price }}">
          {{- product.price | money -}}
        </span>
      </div>

      {% render 'buy-form', product: product, section_id: section.id %}

      <p class="font-geist">{{ product.content }}</p>

      <h3 class="text-base uppercase">Benefits</h3>

      <div class="product-benefits__list grid gap-4 [grid-template-columns:repeat(auto-fit,minmax(280px,1fr))]">
        {%- for benefit in benefits -%}
          <div class="product-benefits__item flex items-start gap-3 bg-white rounded-lg">
            {{ 'icon-check.svg' | inline_asset_content }}
            <span class="product-benefits__text text-base leading-6 text-gray-700">{{ benefit | strip }}</span>
          </div>
        {%- endfor -%}
      </div>

      <h3 class="text-base uppercase">More information</h3>

      <div class="product-accordion flex flex-col gap-3 mt-2">
        {%- for accordion_item in accordion_items -%}
          <collapsible-item class="accordion-item border-b border-gray-200 bg-white hover:border-gray-300 transition-colors">
            <button
              class="accordion-trigger w-full flex items-center justify-between py-2 px-1 text-left hover:bg-gray-50"
              data-collapsible-trigger
              type="button"
            >
              <span class="accordion-title text-base font-medium text-gray-700">
                {{- accordion_item.title | strip -}}
              </span>
              {{ 'icon-plus.svg' | inline_asset_content }}
            </button>
            <div class="accordion-content" data-collapsible-content>
              <div class="accordion-content-inner px-4 pb-4 text-[15px] leading-[1.6] text-gray-600">
                {{ accordion_item.content }}
              </div>
            </div>
          </collapsible-item>
        {%- endfor -%}
      </div>

      <script src="{{ 'collapsible.js' | asset_url }}" defer></script>
    </div>
  </div>
</div>

{% stylesheet %}
  .option-value input[type='radio'] {
    appearance: none;
    -webkit-appearance: none;
    width: 16px;
    height: 16px;
    border: 1px solid #ddd;
    border-radius: 50%;
    outline: none;
    cursor: pointer;
    transition: all 0.2s ease;
    flex-shrink: 0;
    position: relative;
  }

  .option-value input[type='radio']:checked {
    border-color: #000;
  }

  .option-value input[type='radio']:checked::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 10px;
    height: 10px;
    border-radius: 50%;
    background: var(--gradient, linear-gradient(100deg, #a2eeff 3.17%, #b4ceff 35.34%, #d4b9ff 103.04%));
  }

  .option-value:hover input[type='radio'] {
    border-color: #999;
  }

  .option-text {
    font-size: 14px;
    color: #333;
  }

  .option-value input[type='radio']:checked ~ .option-text {
    font-weight: 500;
  }

  .embla .embla__slide {
    flex: 0 0 100%;
    min-width: 0;
  }

  .product-carousel__nav {
    position: absolute;
    top: 50%;
    z-index: 2;
    display: flex;
    align-items: center;
    justify-content: center;
    width: 40px;
    height: 40px;
    border: none;
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.9);
    color: #000;
    cursor: pointer;
    transition: all 0.2s ease;
    transform: translateY(-50%);
  }

  .product-carousel__nav:hover:not(:disabled) {
    background: #fff;
    box-shadow: 0 2px 8px rgba(0, 0, 0, 0.15);
  }

  .product-carousel__nav:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .product-carousel__nav svg {
    width: 20px;
    height: 20px;
  }

  .quantity-input::-webkit-outer-spin-button,
  .quantity-input::-webkit-inner-spin-button {
    -webkit-appearance: none;
    margin: 0;
  }
  /* Accordion Styles (only the interactive parts kept) */

  .accordion-item.active .accordion-icon {
    transform: rotate(180deg);
  }

  .accordion-content {
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.3s ease;
  }

  .accordion-item.active .accordion-content {
    max-height: 500px;
  }
{% endstylesheet %}

{% javascript %}
  document.addEventListener('DOMContentLoaded', function () {
    // Load Embla Carousel from CDN
    const script = document.createElement('script');
    script.src = 'https://unpkg.com/embla-carousel/embla-carousel.umd.js';
    script.onload = function () {
      // Initialize Embla Carousel for product images
      const carouselElement = document.querySelector('.embla');
      if (carouselElement) {
        const embla = EmblaCarousel(carouselElement, {
          loop: true,
          align: 'center',
        });

        // Navigation buttons
        const prevButton = carouselElement.querySelector('.embla__prev');
        const nextButton = carouselElement.querySelector('.embla__next');

        if (prevButton) {
          prevButton.addEventListener('click', embla.scrollPrev);
        }
        if (nextButton) {
          nextButton.addEventListener('click', embla.scrollNext);
        }

        // Update button states
        function updateButtons() {
          if (prevButton) {
            prevButton.disabled = !embla.canScrollPrev();
          }
          if (nextButton) {
            nextButton.disabled = !embla.canScrollNext();
          }
        }

        // Initial button state
        updateButtons();

        // Update buttons on scroll
        embla.on('select', updateButtons);
      }
    };
    document.head.appendChild(script);
  });
{% endjavascript %}

{% schema %}
{
  "name": "t:general.product",
  "settings": [],
  "disabled_on": {
    "groups": ["header", "footer"]
  }
}
{% endschema %}
