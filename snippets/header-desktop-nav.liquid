<nav class="bg-[var(--color-background-default)] border-b border-black/12 h-16 z-10">
  <div class="container grid grid-cols-[1fr_auto_1fr] items-center justify-center py-2 px-3 relative h-16">
    <div class="flex gap-2" data-desktop-menu>
      {% if shop_menu and shop_menu.links.size > 0 %}
        {% for link in shop_menu.links %}
          <a
            href="{{ link.url }}"
            class="block relative py-1 px-3 no-underline text-primary hover:bg-neutral-100 rounded-full"
            {% if link.type == 'collection_link' %}
              data-mega-menu-trigger
              data-collection-handle="{{ link.object.handle }}"
            {% endif %}
          >
            {{ link.title }}
          </a>
        {% endfor %}
      {% endif %}
    </div>

    <a href="{{ routes.root_url }}" aria-label="{{ shop.name | escape }}" class="[&>svg]:size-12">
      {{ 'logo.svg' | inline_asset_content }}
    </a>

    <div class="flex items-center gap-2 justify-end">
      {% if marketing_menu and marketing_menu.links.size > 0 %}
        {% for link in marketing_menu.links %}
          <a
            href="{{ link.url }}"
            class="block relative py-1 px-3 no-underline text-primary hover:bg-neutral-100 rounded-full"
          >
            {{ link.title }}
          </a>
        {% endfor %}
      {% endif %}
      <a
        href="account"
        aria-label="User"
        class="flex items-center justify-center size-9 [&>svg]:size-6 rounded-full hover:bg-neutral-100"
      >
        {{ 'icon-account.svg' | inline_asset_content }}
      </a>
      <a
        href="{{ routes.cart_url }}"
        aria-label="Cart"
        aria-haspopup="drawer"
        id="cart-icon-bubble"
        class="flex items-center justify-center size-9 [&>svg]:size-6 rounded-full hover:bg-neutral-100"
      >
        {{ 'icon-cart.svg' | inline_asset_content }}
      </a>
    </div>
  </div>
</nav>

<!-- Mega Menu Panels - pre-rendered for each collection -->
{% if shop_menu and shop_menu.links.size > 0 %}
  {% for link in shop_menu.links %}
    {% if link.type == 'collection_link' %}
      <div
        class="absolute top-full left-0 w-screen max-h-0 overflow-hidden bg-[var(--color-background-default)] opacity-0 invisible transition-all duration-[250ms] ease-in-out z-[100] aria-[hidden=false]:max-h-[600px] aria-[hidden=false]:opacity-100 aria-[hidden=false]:visible"
        data-mega-menu-panel="{{ link.object.handle }}"
        aria-hidden="true"
      >
        <div class="container p-8">
          <div class="grid grid-cols-[300px_1fr] gap-8 items-start">
            {% if link.object.image %}
              <div class="relative rounded-lg overflow-hidden">
                <a href="{{ link.object.url }}">
                  {{
                    link.object.image
                    | image_url: width: 600, height: 600, crop: 'center'
                    | image_tag: class: 'w-full h-full object-cover aspect-square block', alt: link.object.title
                  }}
                  <div class="absolute inset-0 flex items-end justify-center p-6 bg-gradient-to-t from-black/60 to-black/0 opacity-0 transition-opacity duration-200">
                    <span class="text-white font-medium text-sm uppercase tracking-wider">
                      View all
                      {{ link.object.title }}
                    </span>
                  </div>
                </a>
              </div>
            {% endif %}

            <div class="grid grid-cols-3 gap-6">
              {% comment %} Show menu links if available {% endcomment %}
              {% liquid
                assign show_menu = false
                assign menu_to_show = null
                if link.object.handle == 'kozmetika' or link.object.handle == 'cosmetics'
                  if cosmetics_menu and cosmetics_menu.links.size > 0
                    assign show_menu = true
                    assign menu_to_show = cosmetics_menu
                  endif
                elsif link.object.handle == 'dodaci-prehrani' or link.object.handle == 'supplements'
                  if supplements_menu and supplements_menu.links.size > 0
                    assign show_menu = true
                    assign menu_to_show = supplements_menu
                  endif
                endif
              %}

              {% if show_menu %}
                <div class="col-span-3 mb-4">
                  <ul class="list-none p-0 m-0 flex flex-wrap gap-4">
                    {% for menu_link in menu_to_show.links %}
                      <li>
                        <a href="{{ menu_link.url }}" class="text-primary hover:text-primary/80 no-underline text-sm">
                          {{ menu_link.title }}
                        </a>
                      </li>
                    {% endfor %}
                  </ul>
                </div>
              {% endif %}

              {% for product in link.object.products limit: 3 %}
                {% render 'product-card', product: product, hide_buy_form: true %}
              {% endfor %}
            </div>
          </div>
        </div>
      </div>
    {% endif %}
  {% endfor %}
{% endif %}

{% stylesheet %}
  .site-header__menu-link[data-mega-menu-trigger]:hover::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    height: 2px;
    background-color: currentColor;
  }
{% endstylesheet %}

{% javascript %}
  class MegaMenu {
    constructor() {
      this.menu = document.querySelector('[data-desktop-menu]');
      this.triggers = document.querySelectorAll('[data-mega-menu-trigger]');
      this.panels = document.querySelectorAll('[data-mega-menu-panel]');
      this.currentPanel = null;
      this.hoverTimeout = null;

      this.init();
    }

    init() {
      if (!this.menu || this.triggers.length === 0) {
        return;
      }

      this.bindEvents();
    }

    bindEvents() {
      // Add hover listeners to each trigger
      this.triggers.forEach((trigger) => {
        trigger.addEventListener('mouseenter', (e) => this.handleTriggerEnter(e));
        trigger.addEventListener('mouseleave', () => this.scheduleClose());
      });

      // Keep mega menu open when hovering over it
      this.panels.forEach((panel) => {
        panel.addEventListener('mouseenter', () => this.cancelClose());
        panel.addEventListener('mouseleave', () => this.scheduleClose());
      });

      // Close on escape key
      document.addEventListener('keydown', (e) => {
        if (e.key === 'Escape' && this.currentPanel) {
          this.closeAll();
        }
      });
    }

    handleTriggerEnter(e) {
      this.cancelClose();
      const handle = e.currentTarget.dataset.collectionHandle;

      if (!handle) return;

      // Close current panel if different
      if (this.currentPanel && this.currentPanel !== handle) {
        this.closeAll();
      }

      // Show the panel for this collection
      this.showPanel(handle);
    }

    showPanel(handle) {
      const panel = document.querySelector(`[data-mega-menu-panel="${handle}"]`);

      if (panel) {
        panel.setAttribute('aria-hidden', 'false');
        this.currentPanel = handle;
      }
    }

    scheduleClose() {
      // Delay closing to allow moving mouse to mega menu
      this.hoverTimeout = setTimeout(() => this.closeAll(), 150);
    }

    cancelClose() {
      if (this.hoverTimeout) {
        clearTimeout(this.hoverTimeout);
        this.hoverTimeout = null;
      }
    }

    closeAll() {
      this.panels.forEach((panel) => {
        panel.setAttribute('aria-hidden', 'true');
      });
      this.currentPanel = null;
    }
  }

  // Initialize when DOM is ready
  if (document.readyState === 'loading') {
    document.addEventListener('DOMContentLoaded', () => new MegaMenu());
  } else {
    new MegaMenu();
  }
{% endjavascript %}
