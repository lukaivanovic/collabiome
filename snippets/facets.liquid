{% comment %}
  Facets/filters snippet for collection filtering
  Uses Shopify native filters with URL-based filtering
  Horizontal multi-select dropdown layout
{% endcomment %}

{% liquid
  assign filters = collection.filters
  assign has_active_filters = false

  for filter in filters
    if filter.active_values.size > 0
      assign has_active_filters = true
      break
    endif
  endfor
%}

{% comment %} Horizontal filters with dropdowns {% endcomment %}
<facet-filter-form class="facets">
  <form id="FacetFiltersForm" class="facets__form">
    {% comment %} Active filters {% endcomment %}
    {% if has_active_filters %}
      <div class="facets__active">
        <div class="facets__active-list">
          {% for filter in filters %}
            {% for value in filter.active_values %}
              <a href="{{ value.url_to_remove }}" class="facets__active-item">
                <span>{{ filter.label }}: {{ value.label }}</span>
                <svg width="12" height="12" viewBox="0 0 12 12" fill="none">
                  <path d="M9 3L3 9M3 3L9 9" stroke="currentColor" stroke-width="1.5" stroke-linecap="round"/>
                </svg>
              </a>
            {% endfor %}
          {% endfor %}
        </div>
        <a href="{{ collection.url }}" class="facets__clear-all">
          {{ 'filters.clear_all' | t | default: 'Clear all' }}
        </a>
      </div>
    {% endif %}

    {% comment %} Filter dropdowns {% endcomment %}
    <div class="facets__dropdowns">
      {% for filter in filters %}
        {% case filter.type %}
          {% when 'list' %}
            <facet-select class="facets__select" data-filter-label="{{ filter.label }}">
              <button
                type="button"
                data-select-button
                class="facets__select-button"
                aria-expanded="false"
              >
                {{ filter.label }}
              </button>
              <div class="facets__select-panel hidden" data-select-panel>
                <ul class="facets__select-list">
                  {% for value in filter.values %}
                    <li class="facets__select-item">
                      <label class="facets__select-label">
                        <input
                          type="checkbox"
                          name="{{ filter.param_name }}"
                          value="{{ value.value }}"
                          class="facets__select-checkbox"
                          {% if value.active %}
                            checked
                          {% endif %}
                          {% if value.count == 0 and value.active == false %}
                            disabled
                          {% endif %}
                        >
                        <span class="facets__select-text">
                          {{ value.label }}
                          <span class="facets__count">({{ value.count }})</span>
                        </span>
                      </label>
                    </li>
                  {% endfor %}
                </ul>
              </div>
            </facet-select>

          {% when 'boolean' %}
            <facet-select class="facets__select" data-filter-label="{{ filter.label }}">
              <button
                type="button"
                data-select-button
                class="facets__select-button"
                aria-expanded="false"
              >
                {{ filter.label }}
              </button>
              <div class="facets__select-panel hidden" data-select-panel>
                <ul class="facets__select-list">
                  <li class="facets__select-item">
                    <label class="facets__select-label">
                      <input
                        type="checkbox"
                        name="{{ filter.param_name }}"
                        value="{{ filter.true_value.value }}"
                        class="facets__select-checkbox"
                        {% if filter.true_value.active %}
                          checked
                        {% endif %}
                        {% if filter.true_value.count == 0 and filter.true_value.active == false %}
                          disabled
                        {% endif %}
                      >
                      <span class="facets__select-text">
                        {{ filter.true_value.label }}
                        <span class="facets__count">({{ filter.true_value.count }})</span>
                      </span>
                    </label>
                  </li>
                  <li class="facets__select-item">
                    <label class="facets__select-label">
                      <input
                        type="checkbox"
                        name="{{ filter.param_name }}"
                        value="{{ filter.false_value.value }}"
                        class="facets__select-checkbox"
                        {% if filter.false_value.active %}
                          checked
                        {% endif %}
                        {% if filter.false_value.count == 0 and filter.false_value.active == false %}
                          disabled
                        {% endif %}
                      >
                      <span class="facets__select-text">
                        {{ filter.false_value.label }}
                        <span class="facets__count">({{ filter.false_value.count }})</span>
                      </span>
                    </label>
                  </li>
                </ul>
              </div>
            </facet-select>

          {% when 'price_range' %}
            <div class="facets__price-range-container">
              <label class="facets__price-label-inline">{{ filter.label }}</label>
              <div class="facets__price-range">
                <label class="facets__price-label">
                  <span>{{ 'filters.price_from' | t | default: 'From' }}</span>
                  <input
                    type="number"
                    name="{{ filter.min_value.param_name }}"
                    value="{{ filter.min_value.value | default: '' }}"
                    placeholder="{{ filter.range_min | money_without_currency }}"
                    class="facets__price-input"
                  >
                </label>
                <label class="facets__price-label">
                  <span>{{ 'filters.price_to' | t | default: 'To' }}</span>
                  <input
                    type="number"
                    name="{{ filter.max_value.param_name }}"
                    value="{{ filter.max_value.value | default: '' }}"
                    placeholder="{{ filter.range_max | money_without_currency }}"
                    class="facets__price-input"
                  >
                </label>
              </div>
            </div>
        {% endcase %}
      {% endfor %}
    </div>
  </form>
</facet-filter-form>

{% stylesheet %}
  .facets {
    display: block;
  }

  .facets__form {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .facets__active {
    padding: 0.75rem 1rem;
    background: #f9fafb;
    border-radius: 0.5rem;
    border: 1px solid #e5e7eb;
    display: flex;
    justify-content: space-between;
    align-items: center;
    flex-wrap: wrap;
    gap: 0.75rem;
  }

  .facets__active-list {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }

  .facets__active-item {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    padding: 0.25rem 0.5rem;
    background: #374151;
    color: white;
    border-radius: 0.25rem;
    text-decoration: none;
    font-size: 0.75rem;
    transition: background-color 0.2s;
  }

  .facets__active-item:hover {
    background: #1f2937;
  }

  .facets__clear-all {
    color: #6b7280;
    text-decoration: underline;
    font-size: 0.875rem;
    white-space: nowrap;
  }

  .facets__clear-all:hover {
    color: #374151;
  }

  .facets__dropdowns {
    display: flex;
    flex-wrap: wrap;
    gap: 0.75rem;
    align-items: flex-start;
  }

  .facets__select {
    position: relative;
    display: inline-block;
  }

  .facets__select-button {
    display: flex;
    align-items: center;
    justify-content: space-between;
    gap: 0.5rem;
    padding: 0.625rem 1rem;
    background: white;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    cursor: pointer;
    transition: all 0.2s;
    white-space: nowrap;
  }

  .facets__select-button:hover {
    border-color: #9ca3af;
    background: #f9fafb;
  }

  .facets__select-button::after {
    content: 'â–¼';
    font-size: 0.625rem;
    transition: transform 0.2s;
  }

  .facets__select-button[aria-expanded='true']::after {
    transform: rotate(180deg);
  }

  .facets__select-panel {
    position: absolute;
    top: calc(100% + 0.25rem);
    left: 0;
    z-index: 50;
    min-width: 200px;
    max-width: 280px;
    max-height: 300px;
    overflow-y: auto;
    background: white;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
    box-shadow: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
  }

  .facets__select-list {
    list-style: none;
    padding: 0.5rem;
    margin: 0;
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
  }

  .facets__select-item {
    display: block;
  }

  .facets__select-label {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    cursor: pointer;
    padding: 0.375rem 0.5rem;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    transition: background-color 0.15s;
  }

  .facets__select-label:hover {
    background: #f3f4f6;
  }

  .facets__select-checkbox {
    width: 1rem;
    height: 1rem;
    cursor: pointer;
    flex-shrink: 0;
  }

  .facets__select-text {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    color: #374151;
  }

  .facets__count {
    color: #6b7280;
    font-weight: normal;
  }

  .facets__price-range-container {
    display: flex;
    align-items: center;
    gap: 0.75rem;
    padding: 0.625rem 1rem;
    background: white;
    border: 1px solid #d1d5db;
    border-radius: 0.375rem;
  }

  .facets__price-label-inline {
    font-size: 0.875rem;
    font-weight: 500;
    color: #374151;
    white-space: nowrap;
  }

  .facets__price-range {
    display: flex;
    gap: 0.5rem;
    align-items: center;
  }

  .facets__price-label {
    display: flex;
    align-items: center;
    gap: 0.25rem;
    font-size: 0.875rem;
    color: #374151;
  }

  .facets__price-input {
    padding: 0.375rem 0.5rem;
    border: 1px solid #d1d5db;
    border-radius: 0.25rem;
    font-size: 0.875rem;
    width: 80px;
  }

  .facets__price-input:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 1px #3b82f6;
  }

  .hidden {
    display: none !important;
  }

  @media (max-width: 768px) {
    .facets__dropdowns {
      flex-direction: column;
      gap: 0.5rem;
    }

    .facets__select-button {
      width: 100%;
    }

    .facets__select-panel {
      width: 100%;
      max-width: none;
    }

    .facets__price-range-container {
      flex-direction: column;
      align-items: flex-start;
      width: 100%;
    }

    .facets__price-range {
      width: 100%;
    }

    .facets__price-input {
      flex: 1;
      width: 100%;
    }
  }
{% endstylesheet %}
